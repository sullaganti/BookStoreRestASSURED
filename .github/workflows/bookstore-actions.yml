name: Bookstore CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
# permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  bookstore:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          tree
          pwd
          dir .
          cd bookstore/bookstore
          pip install -r requirements.txt

      - name: Set up Docker Compose
        run: |
          cd bookstore/bookstore
          docker compose up --build -d bookstore

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests
        run: |
          mvn clean test -D TestNgXml="BookStore.xml"

      - name: Tear down Docker Compose
        if: always()
        run: |
          cd bookstore/bookstore
          docker compose down

      - name: Generate Allure Report
        if: always()
        run: mvn allure:report

      - name: Create reports directory structure
        if: always()
        run: |
          buildId="${{ github.run_number }}"
          commitHash="${{ github.sha }}"
          commitHashShort=${commitHash:0:7}
          
          # Create main reports directory
          mkdir -p "./reports"
          
          # Create build-specific directories
          allureDir="./reports/allure-report-build-$buildId"
          extentDir="./reports/extent-report-build-$buildId"
          
          mkdir -p "$allureDir"
          mkdir -p "$extentDir"
          
          # Copy Allure reports
          if [ -d "./target/site/allure-maven-plugin" ]; then
              cp -r ./target/site/allure-maven-plugin/* "$allureDir/" 2>/dev/null || true
          fi
          
          # Copy Extent reports
          if [ -d "./ExtentReports" ]; then
              cp -r ./ExtentReports/* "$extentDir/" 2>/dev/null || true
          fi

      - name: Create index page
        if: always()
        run: |
          buildId="${{ github.run_number }}"
          commitHash="${{ github.sha }}"
          commitHashShort=${commitHash:0:7}
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          # Create simple HTML index
          cat > "./reports/index.html" << EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Test Reports - Build $buildId</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; }
                  .header { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 30px; }
                  .reports { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }
                  .report-card { border: 1px solid #e1e5e9; border-radius: 8px; padding: 20px; background: white; }
                  .report-card h3 { margin-top: 0; color: #0366d6; }
                  .report-link { display: inline-block; padding: 10px 16px; background: #0366d6; color: white; text-decoration: none; border-radius: 6px; margin-top: 10px; }
                  .report-link:hover { background: #0356cc; }
                  .info { color: #586069; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>ðŸ“Š Test Reports</h1>
                  <div class="info">
                      <p><strong>Build:</strong> #$buildId</p>
                      <p><strong>Commit:</strong> $commitHashShort</p>
                      <p><strong>Generated:</strong> $timestamp</p>
                  </div>
              </div>
              
              <div class="reports">
                  <div class="report-card">
                      <h3>ðŸ“Š Allure Report</h3>
                      <p>Comprehensive test execution report with detailed analytics, test history, and failure analysis.</p>
                      <a href="allure-report-build-$buildId/index.html" class="report-link">View Allure Report</a>
                  </div>
                  
                  <div class="report-card">
                      <h3>ðŸ“Š Extent Report</h3>
                      <p>Detailed Extent report with test execution logs and visualizations.</p>
                      <a href="extent-report-build-$buildId/" class="report-link">View Extent Report</a>
                  </div>
              </div>
          </body>
          </html>
          EOF

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

      - name: Upload Extent Report
        uses: actions/upload-artifact@v3
        with:
          name: extent-report
          path: ExtentReports/ExtentReport.html

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./target/site/reports

      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v4
